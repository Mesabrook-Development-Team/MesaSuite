
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    string ValidationMessage(string field)
    {
        if (!ViewData.ModelState.Any(kvp => kvp.Key == field))
        {
            return "";
        }

        System.Text.StringBuilder builder = new System.Text.StringBuilder();
        foreach (string error in ViewData.ModelState[field].Errors.Select(me => me.ErrorMessage))
        {
            if (builder.Length > 0)
            {
                builder.Append("\r\n");
            }

            builder.Append(error);
        }

        return builder.ToString();
    }

    string ValidationClass(string field)
    {
        if (!string.IsNullOrEmpty(ValidationMessage(field)))
        {
            return "";
        }

        return "d-none";
    }
}

<span>
    <img src="~/Content/flag.jpg" alt="Mesabrook Flag" width="91" height="48" class="float-right" />
    <h1 class="h1">Mesabrook Login</h1>
</span>

<form method="post" autocomplete="off">
    @if (ViewData.ModelState.Any(kvp => kvp.Key.Equals("loginToProgramName", StringComparison.OrdinalIgnoreCase) && !string.IsNullOrEmpty(kvp.Value.Value.AttemptedValue)))
    {
        <div class="alert alert-danger">
            You need to login to open <strong>@ViewData.ModelState["loginToProgramName"].Value.AttemptedValue</strong>
        </div>
    }
    <div class="border border-info p-1">
        <div class="form-group">
            <label for="user">Username</label>
            <input type="text" class="form-control w-100" name="user" value="@Html.Value("user")" />
            <label class="@ValidationClass("user") text-danger">@ValidationMessage("user")</label>
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <input type="password" class="form-control w-100" name="password" />
            <label class="@ValidationClass("password") text-danger">@ValidationMessage("password")</label>
        </div>
    </div>
    <input type="hidden" name="state" value="@Html.Value("state")" />
    <input type="hidden" name="client_id" value="@Html.Value("client_id")" />
    <input type="hidden" name="redirect_uri" value="@Html.Value("redirect_uri")" />
    <button type="submit" class="btn btn-info mt-1">Sign In</button>
</form>